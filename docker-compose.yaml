services:
  mongodb:
    image: mongo
    container_name: mongo-db-container
    restart: always
    ports:
      - ${MONGO_PORT}:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodata:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - app-network

  flask_app:
    image: python:3.12.7-slim
    container_name: flask_app
    working_dir: /app
    volumes:
      - ./web_api:/app/web_api
      - ./requirements.txt:/app/requirements.txt
      - ./.env:/app/.env
      - ./backend/ecg_classifier.pth:/app/backend/ecg_classifier.pth
    ports:
      - "${FLASK_PORT}:5000"
    command: >
      bash -c "pip install --upgrade pip &&
               pip install -r requirements.txt &&
               python web_api/app.py"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  mongodata:
    driver: local

